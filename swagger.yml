openapi: 3.1.0
info:
  title: Synaptic Relay Coordinator
  version: "1.0.0"
servers:
  - url: http://localhost
paths:
  /api/v1/assessment/start:
    post:
      tags: [Relay]
      summary: Start Assessment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAssessmentRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
  /api/v1/assessment/store:
    post:
      tags: [Relay]
      summary: Store Assessment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreAssessmentRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
  /api/v1/camera/process:
    post:
      tags: [Visionary]
      summary: Process Camera Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CameraDataInput'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
  /api/v1/emr/send:
    post:
      tags: [Nexus]
      summary: Send Data to EMR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
  /health:
    get:
      tags: [infra]
      summary: Health Check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    PatientData:
      type: object
      properties:
        patient_id:
          type: string
        csn_id:
          type: string
        encounter_id:
          type: string
      required: [patient_id, csn_id, encounter_id]
    Assessment:
      type: object
      properties:
        assessment_type:
          type: string
          enum: [walking, manual_dexterity]
        data:
          type: object
          additionalProperties: true
        scheduled_time:
          type: string
      required: [assessment_type, data, scheduled_time]
    StartAssessmentRequest:
      type: object
      properties:
        patient_data:
          $ref: '#/components/schemas/PatientData'
      required: [patient_data]
    StoreAssessmentRequest:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
        patient_data:
          $ref: '#/components/schemas/PatientData'
      required: [assessment, patient_data]
    CameraDataInput:
      type: object
      properties:
        patient_id:
          type: string
        start_time:
          type: string
        stop_time:
          type: string
      required: [patient_id, start_time, stop_time]
